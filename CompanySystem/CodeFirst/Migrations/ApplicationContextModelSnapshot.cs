// <auto-generated />
using System;
using CodeFirst.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CodeFirst.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CodeFirst.Models.Department", b =>
                {
                    b.Property<int>("DNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DNum"));

                    b.Property<string>("DName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.HasKey("DNum");

                    b.HasIndex("ManagerId")
                        .IsUnique();

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("CodeFirst.Models.Dependent", b =>
                {
                    b.Property<int>("SSN")
                        .HasColumnType("int");

                    b.Property<int>("DependentID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DependentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("SSN", "DependentID");

                    b.ToTable("Dependents");
                });

            modelBuilder.Entity("CodeFirst.Models.Employee", b =>
                {
                    b.Property<int>("SSN")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SSN"));

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DNum")
                        .HasColumnType("int");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SuperSsn")
                        .HasColumnType("int");

                    b.HasKey("SSN");

                    b.HasIndex("DNum");

                    b.HasIndex("SuperSsn");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("CodeFirst.Models.EmployeesProject", b =>
                {
                    b.Property<int>("SSN")
                        .HasColumnType("int");

                    b.Property<int>("PNum")
                        .HasColumnType("int");

                    b.Property<int>("WorkingHours")
                        .HasColumnType("int");

                    b.HasKey("SSN", "PNum");

                    b.HasIndex("PNum");

                    b.ToTable("EmployeesProjects");
                });

            modelBuilder.Entity("CodeFirst.Models.Location", b =>
                {
                    b.Property<int>("DNum")
                        .HasColumnType("int");

                    b.Property<int>("LocationID")
                        .HasColumnType("int");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DNum", "LocationID");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("CodeFirst.Models.Project", b =>
                {
                    b.Property<int>("PNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PNum"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DNum")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PNum");

                    b.HasIndex("DNum");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("CodeFirst.Models.Department", b =>
                {
                    b.HasOne("CodeFirst.Models.Employee", "Manager")
                        .WithOne("Department")
                        .HasForeignKey("CodeFirst.Models.Department", "ManagerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("CodeFirst.Models.Dependent", b =>
                {
                    b.HasOne("CodeFirst.Models.Employee", "Employee")
                        .WithMany("Dependents")
                        .HasForeignKey("SSN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("CodeFirst.Models.Employee", b =>
                {
                    b.HasOne("CodeFirst.Models.Department", "ManagedDepartment")
                        .WithMany("Employees")
                        .HasForeignKey("DNum")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CodeFirst.Models.Employee", "SuperSsnNavigation")
                        .WithMany("InverseSuperSsnNavigation")
                        .HasForeignKey("SuperSsn")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ManagedDepartment");

                    b.Navigation("SuperSsnNavigation");
                });

            modelBuilder.Entity("CodeFirst.Models.EmployeesProject", b =>
                {
                    b.HasOne("CodeFirst.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("PNum")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CodeFirst.Models.Employee", "Employee")
                        .WithMany("EmployeesProjects")
                        .HasForeignKey("SSN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("CodeFirst.Models.Location", b =>
                {
                    b.HasOne("CodeFirst.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DNum")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("CodeFirst.Models.Project", b =>
                {
                    b.HasOne("CodeFirst.Models.Department", "Department")
                        .WithMany("Projects")
                        .HasForeignKey("DNum")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("CodeFirst.Models.Department", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("CodeFirst.Models.Employee", b =>
                {
                    b.Navigation("Department");

                    b.Navigation("Dependents");

                    b.Navigation("EmployeesProjects");

                    b.Navigation("InverseSuperSsnNavigation");
                });
#pragma warning restore 612, 618
        }
    }
}
